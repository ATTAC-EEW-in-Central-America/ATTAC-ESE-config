# Sets the datacenter ID which is primarily used by Arclink and its tools.
# Should not contain spaces.
datacenterID = insivumeh

# Defines the agency ID used to set creationInfo.agencyID in data model
# objects. Should not contain spaces.
agencyID = insivumeh

# Organization name used mainly by ArcLink and SeedLink.
organization = GUA

# Defines a list of modules loaded at startup.
plugins = ${plugins}, fdsnxml, locnll, hypo71, dmvs, dmsm, mlh

# Sets the logging level between 1 and 4 where 1=ERROR, 2=WARNING, 3=INFO and
# 4=DEBUG.
logging.level = 4

# Enables rotation of log files.
logging.file.rotator = true

# Time span after which a log file is rotated.
logging.file.rotator.timeSpan = 86400

# How many historic log files to keep.
logging.file.rotator.archiveSize = 7

# Defines the URL of the messaging server to connect to. URL format is
# [scheme://]host[:port][/queue]. Default scheme: scmp, default port: 18180,
# default queue: production. Examples:
# All default: localhost
# Specfic host: scmp://10.0.1.4:18180/production
# Specfic host and SSL encryption: scmps://10.0.1.4:18180/production
connection.server = localhost

# The connection timeout in seconds. 3 seconds are normally more than enough.
# If a client needs to connect to a remote system with a slow connection, a
# larger timeout might be needed.
connection.timeout = 3

# Defines a list of core modules loaded at startup.
core.plugins = dbmysql

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /opt/seiscomp/share/map/%l/%r/%c.jpg

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# The color of city labels.
scheme.colors.map.cityLabels = ffffffff

# The general color of records/traces.
scheme.colors.records.foreground = 4286F4

# A general trace color of the alternate trace (eg scheli).
scheme.colors.records.alternateForeground = B72D0E

# The depth gradient.
scheme.colors.originSymbol.depth.gradient = 0:00FF00, 20:40FF00, 40:FFFF00, 60:FFBFF0, 80:FF4000, 100:FF0000, 150:FF0040

# Display distances in km?
scheme.unit.distanceInKM = true

# Configures the default filters selectable in manual picker. The entry with a
# leading "@" is selected as default filter.
picker.filters = "@1-25 Hz; RMHP(80) >> ITAPER(10) >> BW(3,1,25)",\
                 "0.1-10 Hz; RMHP(80) >> ITAPER(10) >> BW(3,0.1,10)",\
                 "0.01-1 Hz; RMHP(80) >> ITAPER(10) >> BW(3,0.01,1)",\
                 "5-25 Hz; RMHP(80) >> ITAPER(10) >> BW(3,5,25)",\
                 "1-5 Hz;  RMHP(80) >> ITAPER(10) >> BW(3,1,5)",\
                 ".2-1 Hz; RMHP(80) >> ITAPER(10) >> BW(3,.2,1)",\
                 ".04-.2 Hz; RMHP(80) >> ITAPER(10) >> BW(3,.04,.2)",\
                 ".008-0.04 Hz; RMHP(160) >> ITAPER(10) >> BW(3,.008,.04)",\
                 "VSpick v1 {STA(.1)/LTA(80)[5-10 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,5,10)>>STALTA(.2,80)",\
                 "VS(SM)pick v1 {STA(.2)/LTA(80)[5-10 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,5,10)>>STALTA(.2,80)",\
                 "VSpick v0 {STA(1)/LTA(40)[2-1 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,2,4)>>STALTA(1,40)",\
                 "VS(SM)pick v0 {STA(2)/LTA(40)[2-5 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,2,5)>>STALTA(2,40)",\
                 ;

# Definition of magnitude types for which amplitudes are to be calculated.
amplitudes = MLv, mb, mB, MLh

# Minimum number of phases for reporting origins.
autoloc.minPhaseCount = 4

## Station configuration
autoloc.stationConfig = @CONFIGDIR@/station.conf

# If this string is non-empty, an amplitude obtained from an amplitude object
# is used by ... . If this string is "mb", a period obtained from the amplitude
# object is also used; if it has some other value, then 1 [units?] is used. If
# this string is empty, then the amplitude is set to 0.5 * thresholdXXL, and 1
# [units?] is used for the period.
autoloc.amplTypeAbs = snr

# Time correction applied for each pick made. Station specific values override
# this value.
timeCorrection = 0

# If enabled and "picker" is configured, then detections are sent as well. To
# distinguish between detections and picks the evaluation mode of the pick is
# set to manual. This is meant to be a debug option which can be used to
# compare detections and picks by their evaluation mode.
sendDetections = False

# The time window used to compute a maximum (snr) amplitude on the filtered
# waveforms.
thresholds.amplMaxTimeWindow = 1

# The time used together with measured amplitude and `thresholds.minAmplOffset`
# for scaling the amplitude below which the picker is inactive after a P pick.
# Read the documentation!
thresholds.deadTime = 5

# Interval of the envelope computation. The maximum is taken with that data
# interval and declared as envelope value. The intervals do not overlap.
vsfndr.envelopeInterval = 0.5

# Size of envelope buffer in seconds. The envelope buffer is a ring buffer and
# FinDer receives the maximum of this ring.
finder.envelopeBufferSize = 60

# Defines the message encoding for sending. Allowed values are "binary" or
# "xml". XML has more overhead in processing but is more robust when schema
# versions between client and server are different.
connection.encoding = binary

# Mlh clipping level, in raw counts, 80% of 2^23
module.trunk.global.MLh.ClippingThreshold = 6710886

# MLh parameters.
# According to Jan's changes, specific plugin's variable
# will follow a different schema! (MO)
# define combiner operation for both horizontals (min, max, avg)
#module.trunk.global.MLh.maxavg = max
# minimal signal-to-noise ratio
module.trunk.global.MLh.MinSNR = 0.5

## following inserted 20130417 by kae, copying from rt
# Delta is only valid within 0-6 degrees
module.trunk.global.MLh.delta_min = 0.1

# define attenuation parameters for ML(SED)
# format: "UpToKilometers A B; UpToNextKilometers A B;"
#module.trunk.global.MLh.params = "0 nomag; 60 0.018 2.17; 700 0.0038 3.02"
module.trunk.global.MLh.params = "0 nomag; 60 0.018 1.87; 700 0.0038 2.72"

# Overrides the default time (relative to the trigger time) of the begin of the
# signal window used to pick.
picker.AIC.signalBegin = -10

# Overrides the default time (relative to the trigger time) of the begin of the
# signal window used to pick.
picker.AIC.signalEnd = .5

# The time correction applied to a detected pick.
timeCorr = 0.0
