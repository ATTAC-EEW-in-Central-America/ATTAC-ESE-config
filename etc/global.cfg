# Defines a list of modules loaded at startup.
plugins = ${plugins}, fdsnxml, locnll, hypo71, dmvs, dmsm

# Sets the logging level between 1 and 4 where 1=ERROR, 2=WARNING, 3=INFO and
# 4=DEBUG.
logging.level = 4

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /opt/seiscomp/share/map/%l/%r/%c.jpg

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# The color of city labels.
scheme.colors.map.cityLabels = ffffffff

# The general color of records/traces.
scheme.colors.records.foreground = 4286F4

# A general trace color of the alternate trace (eg scheli).
scheme.colors.records.alternateForeground = B72D0E

# The depth gradient.
scheme.colors.originSymbol.depth.gradient = 0:00FF00, 20:40FF00, 40:FFFF00, 60:FFBFF0, 80:FF4000, 100:FF0000, 150:FF0040

# Configures the default filters selectable in manual picker. The entry with a
# leading "@" is selected as default filter.
picker.filters = "@1-25 Hz; RMHP(80) >> ITAPER(10) >> BW(3,1,25)",\
                 "0.1-10 Hz; RMHP(80) >> ITAPER(10) >> BW(3,0.1,10)",\
                 "0.01-1 Hz; RMHP(80) >> ITAPER(10) >> BW(3,0.01,1)",\
                 "5-25 Hz; RMHP(80) >> ITAPER(10) >> BW(3,5,25)",\
                 "1-5 Hz;  RMHP(80) >> ITAPER(10) >> BW(3,1,5)",\
                 ".2-1 Hz; RMHP(80) >> ITAPER(10) >> BW(3,.2,1)",\
                 ".04-.2 Hz; RMHP(80) >> ITAPER(10) >> BW(3,.04,.2)",\
                 ".008-0.04 Hz; RMHP(160) >> ITAPER(10) >> BW(3,.008,.04)",\
                 "VSpick v1 {STA(.1)/LTA(80)[5-10 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,5,10)>>STALTA(.2,80)",\
                 "VS(SM)pick v1 {STA(.2)/LTA(80)[5-10 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,5,10)>>STALTA(.2,80)",\
                 "VSpick v0 {STA(1)/LTA(40)[2-1 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,2,4)>>STALTA(1,40)",\
                 "VS(SM)pick v0 {STA(2)/LTA(40)[2-5 Hz]};RMHP (80) >> ITAPER (30) >> BW(4,2,5)>>STALTA(2,40)",\
                 ;
# When loading the traces of an event (origin) are
# all picks (not only the associated ones) going to be
# loaded within that timewindow from the database
picker.loadAllPicks = true

# Load all components (Z,N,E) when opening the picker
# per default
picker.loadAllComponents = true
picker.showCrossHairCursor = false
picker.ignoreUnconfiguredStations = false
picker.loadStrongMotion = true
picker.limitStationAcquisition = false
picker.limitStationAcquisitionCount = 10
picker.showAllComponents = true
picker.allComponentsMaximumDistance = 10
picker.usePerStreamTimeWindows = false
picker.preOffset = 60
picker.postOffset = 120
picker.minimumTimeWindow = 1800
picker.alignmentPosition = 0.5
picker.removeAutomaticPicksFromStationAfterManualReview = false
picker.removeAllAutomaticPicksAfterManualReview = false
picker.integration.preFilter = "RMHP (80) >> ITAPER (30)"
picker.integration.applyOnce = true


olv.computeMissingTakeOffAngles = true
olv.computeMagnitudesAfterRelocate = false
olv.computeMagnitudesSilently = false
olv.enableMagnitudeSelection = true
olv.Pvel = 6
olv.drawMapLines = true
olv.drawGridLines = true
olv.defaultAddStationsDistance = 15
olv.hideStationsWithoutData = false
olv.hideDisabledStations = false
olv.ignoreDisabledStations = true

amplitudePicker.preOffset = 300
amplitudePicker.postOffset = 300
amplitudePicker.filters = ""

scheme.unit.distanceInKM = true
scheme.precision.distance = 1
scheme.precision.location = 4
scheme.precision.rms = 2
scheme.precision.uncertainties = 2
scheme.precision.depth = 0
scheme.precision.magnitude = 2
scheme.precision.pickTime = 1
